name: Test Secrets

on:
  workflow_dispatch:

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Test all secrets are set
      run: |
        echo "Testing secrets..."
        
        # Test each secret (without revealing content)
        if [ -n "${{ secrets.EC2_HOST }}" ]; then
          echo "✅ EC2_HOST is set (length: ${#EC2_HOST})"
        else
          echo "❌ EC2_HOST is empty or not set"
        fi
        
        if [ -n "${{ secrets.EC2_USER }}" ]; then
          echo "✅ EC2_USER is set (length: ${#EC2_USER})"
        else
          echo "❌ EC2_USER is empty or not set"
        fi
        
        if [ -n "${{ secrets.EC2_SSH_KEY }}" ]; then
          echo "✅ EC2_SSH_KEY is set (length: ${#EC2_SSH_KEY})"
        else
          echo "❌ EC2_SSH_KEY is empty or not set"
        fi
        
        if [ -n "${{ secrets.MONGODB_URI }}" ]; then
          echo "✅ MONGODB_URI is set (length: ${#MONGODB_URI})"
        else
          echo "❌ MONGODB_URI is empty or not set"
        fi
        
        if [ -n "${{ secrets.SPOONACULAR_API_KEY }}" ]; then
          echo "✅ SPOONACULAR_API_KEY is set (length: ${#SPOONACULAR_API_KEY})"
        else
          echo "❌ SPOONACULAR_API_KEY is empty or not set"
        fi
        
        if [ -n "${{ secrets.GOOGLE_CLIENT_ID }}" ]; then
          echo "✅ GOOGLE_CLIENT_ID is set (length: ${#GOOGLE_CLIENT_ID})"
        else
          echo "❌ GOOGLE_CLIENT_ID is empty or not set"
        fi
        
        # Test SSH connection (without deploying)
        echo "Testing SSH connection..."
        echo "${{ secrets.EC2_SSH_KEY }}" > test_key
        chmod 600 test_key
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i test_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful!'"
        rm test_key
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        SPOONACULAR_API_KEY: ${{ secrets.SPOONACULAR_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
